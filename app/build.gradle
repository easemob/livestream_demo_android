apply plugin: 'com.android.application'
//apply plugin: 'com.neenbedankt.android-apt'

android {
    compileSdkVersion rootProject.ext.compile_sdk_version
    buildToolsVersion rootProject.ext.build_tools_version
    //use legacy for android > 6.0
    //useLibrary 'org.apache.http.legacy'

    defaultConfig {
        applicationId "com.easemob.livedemo"
        minSdkVersion rootProject.ext.min_sdk_version
        targetSdkVersion rootProject.ext.target_skd_version
        versionCode 109
        versionName "1.0.9"
        multiDexEnabled true
        ndk {
            abiFilters "armeabi-v7a","x86","arm64-v8a"
        }
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        release {
            storeFile file('./keystore/live.jks')
            storePassword '123456'
            keyAlias = 'China'
            keyPassword '123456'
        }
        debug {
            storeFile file('./keystore/debug.keystore')
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // base url为http://a1.easemob.com/，为了方便使用将appserver放置到base url中
            buildConfigField("String", "BASE_URL", '"http://a1.easemob.com/"')
            signingConfig signingConfigs.release
        }
        debug {
            buildConfigField("String", "BASE_URL", '"http://a1-hsb.easemob.com/"')
            //buildConfigField("String", "BASE_URL", '"http://a1.easemob.com/"')
            signingConfig signingConfigs.release
        }
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
        disable 'MissingTranslation'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        abortOnError false
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //    implementation(project(':easeui')) {
    //        exclude module: 'support-v4'
    //    }
    //    compile(project(':ulive-android-sdk')) {
    //        exclude module: 'support-v4'
    //    }
    implementation 'com.android.support:multidex:1.0.3'
    implementation "com.jakewharton:butterknife:$butterknife_version"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterknife_version"
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "androidx.lifecycle:lifecycle-livedata:$ax_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel:$ax_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$ax_lifecycle_version"
    implementation "androidx.room:room-runtime:$ax_room_version"
    annotationProcessor "androidx.room:room-compiler:$ax_room_version"
    implementation 'com.github.florent37:viewanimator:1.0.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.weigan:loopView:0.1.1'
    testImplementation 'junit:junit:4.12'
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit2_version"
    implementation project(path: ':custommessage')
    // qiniu
    implementation project(path: ':qiniu_sdk')
    // agora
    implementation project(path: ':fastlive')
}
